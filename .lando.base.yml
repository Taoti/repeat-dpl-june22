recipe: pantheon
config:
  framework: drupal8
  xdebug: false

events:
  post-start:
    - appserver: composer install
  post-db-import:
    - appserver: drush cr

services:
  appserver:
    build_as_root:
      - curl -sL https://deb.nodesource.com/setup_12.x | bash -
      - apt-get install -y nodejs
      - npm install --global gulp-cli stylelint stylelint-no-browser-hacks stylelint-config-standard stylelint-order
      - mkdir -p /root/tmp
      - chmod 666 /root/tmp
      - mkdir -p /app/web/sites/simpletest/browser-output
      - chmod 777 -R /app/web/sites/simpletest
    overrides:
      environment:
        PHP_IDE_CONFIG: serverName=localhost
      volumes:
        - ${HOME}/.lando/composer_cache:/var/www/.composer
  database:
    # Uncomment this line and change the port as needed to access the database from an external
    # tool such as MySQL Workbench - access will then be mysql://pantheon:pantheon@localhost:PORT
    #portforward: 33308

    # Default Pantheon lando recipe does not use Drupal 9's minimum MariaDB version.
    overrides:
      image: bitnami/mariadb:10.4.12

tooling:
  npm:
    service: appserver
    cmd: npm --cwd="/app/web/themes/THEME_NAME"
  gulp:
    service: appserver
    cmd: gulp --cwd=web/themes/THEME_NAME
  xdebug-on:
    service: appserver
    description: Enable xdebug for nginx.
    cmd:
      - rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini -f
      - docker-php-ext-enable xdebug
      - pkill -o -USR2 php-fpm
      - echo "Xdebug enabled"
    user: root
  xdebug-off:
    service: appserver
    description: Disable xdebug for nginx.
    cmd:
      - rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini -f
      - pkill -o -USR2 php-fpm
      - echo "Xdebug disabled"
    user: root
  xdebug-profiler-on:
    service: appserver
    description: Enable xdebug profiler.
    user: root
    cmd:
      - rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini -f
      - docker-php-ext-enable xdebug
      - echo "xdebug.profiler_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - echo "xdebug.profiler_output_dir=/app/profiler" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - mkdir -p /app/profiler
      - chmod 777 /app/profiler
      - pkill -o -USR2 php-fpm
      - echo "Xdebug profiler enabled"
  xdebug-profiler-off:
    service: appserver
    description: Disable xdebug profiler (leaves xdebug on).
    user: root
    cmd:
      - rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini -f
      - docker-php-ext-enable xdebug
      - pkill -o -USR2 php-fpm
      - echo "Xdebug profiler disabled"
